type EventListResponse {
  eventId: ID
  name: String
  startEvent: String
  endEvent: String
  saleDegree: Float
  normalPrice: Int
  premiumPrice: Int
  discountNormalPrice: Float
  discountPremiumPrice: Float
  category: Category
  thumbNailUrl: String
  castings: [String]
  place: String
  isAdult: Boolean
}

type EventGraphqlResponse {
  eventId: ID!
  name: String!
  startEvent: String!
  endEvent: String!
  availablePurchaseTime: String!
  eventTime: Int!
  normalPrice: Int!
  premiumPrice: Int!
  saleDegree: Float!
  discountNormalPrice: Float!
  discountPremiumPrice: Float!
  hosts: [String!]!
  castings: [String!]!
  totalSeat: Int!
  remainSeat: Int!
  place: String!
  isAdult: Boolean!
  viewCount: Int!
  category: Category!
  isCancelled: Boolean!
  isSpecialSeatA: Boolean!
  isSpecialSeatB: Boolean!
  isSpecialSeatC: Boolean!
  thumbNailUrl: String!
  imageUrls: [String!]!
}

enum Category {
  MUSICAL
  CONCERT
  PLAY
  CLASSIC
  SPORTS
}

type Query {
  getEventByPlace(place: String!): [EventGraphqlResponse]
  getEventByName(name: String!): [EventGraphqlResponse]
  getEventByCasting(casting: String!): [EventGraphqlResponse]
}

# 쓰기 연산 로직
# type Mutation {}



#query {
#  getEventByName(name: "콘서트 이벤트0") {
#    id
#    name
#    startEvent
#    endEvent
#    availablePurchaseTime
#    normalPrice
#    premiumPrice
#    saleDegree
#    totalSeat
#    remainSeat
#    place
#    isAdult
#    viewCount
#    isCancelled
#    category
#  }
#}